name: ExoPlayer FFmpeg Extension Publish

on:
  push:
    tags:
      - v*
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04
    environment: release
    if: ${{ startsWith(github.ref, 'refs/tags/v') || github.repository == 'jellyfin/jellyfin-exoplayer-ffmpeg-extension' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11
      - name: Setup Gradle cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Setup environment variables
        run: |
          echo "EXOPLAYER_ROOT=${GITHUB_WORKSPACE}/ExoPlayer" >> $GITHUB_ENV
          echo "FFMPEG_EXT_PATH=${GITHUB_WORKSPACE}/ExoPlayer/extensions/ffmpeg/src/main" >> $GITHUB_ENV
          echo "FFMPEG_PATH=${GITHUB_WORKSPACE}/ffmpeg" >> $GITHUB_ENV
          echo "ENABLED_DECODERS=(alac pcm_mulaw pcm_alaw aac ac3 eac3 dca mlp truehd)" >> $GITHUB_ENV
      - name: Create softlink to ffmpeg in ExoPlayer
        run: |
          cd "${FFMPEG_EXT_PATH}/jni"
          ln -sf "${FFMPEG_PATH}" ffmpeg
      - name: Build ffmpeg
        run: |
          cd "${FFMPEG_EXT_PATH}/jni"
          ./build_ffmpeg.sh "${FFMPEG_EXT_PATH}" "${ANDROID_NDK_ROOT}" "linux-x86_64" "${ENABLED_DECODERS[@]}"
      - name: Force specific version of cmake to build extension
        run: |
          cmake=(${ANDROID_SDK_ROOT}/cmake/3.10.2*)
          echo cmake.dir="${cmake[0]}" | tee -a local.properties
      - name: Set JELLYFIN_VERSION
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: echo "JELLYFIN_VERSION=$(echo ${GITHUB_REF#refs/tags/v} | tr / -)" >> $GITHUB_ENV
      - name: Build extension and publish library
        run: ./gradlew :exoplayer-ffmpeg-extension:publish closeAndReleaseSonatypeStagingRepository
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
